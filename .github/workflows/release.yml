name: Release
on:
  push:
    tags:
      - '*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          mv target/x86_64-unknown-linux-gnu/release/pg_datanymizer ./pg_datanymizer
          chmod +x pg_datanymizer
          tar -czf pg_datanymizer-linux-x86_64.tar.gz pg_datanymizer
          rm pg_datanymizer
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: pg_datanymizer-*
          draft: true
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-linux-musl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build
        run: |
          rustup target add x86_64-unknown-linux-musl
          sudo sh -c 'apt-get install musl-tools && \
              ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm && \
              ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic && \
              ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux && \
              mkdir /musl && \
              wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1q.tar.gz && \
              tar zxvf OpenSSL_1_1_1q.tar.gz && \
              cd openssl-OpenSSL_1_1_1q/ && \
              CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=/musl --openssldir=/musl/ssl linux-x86_64 && \
              make depend && \
              make -j$(nproc) && \
              make install'
          export PKG_CONFIG_ALLOW_CROSS=1
          export OPENSSL_STATIC=true
          export OPENSSL_DIR=/musl
          cargo build --release --target x86_64-unknown-linux-musl
          mv target/x86_64-unknown-linux-musl/release/pg_datanymizer ./pg_datanymizer
          chmod +x pg_datanymizer
          tar -czf pg_datanymizer-alpine-x86_64.tar.gz pg_datanymizer
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: pg_datanymizer-*
          draft: true
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-darwin:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin
          cp target/x86_64-apple-darwin/release/pg_datanymizer ./pg_datanymizer
          chmod +x pg_datanymizer
          tar -czf pg_datanymizer-darwin-x86_64.tar.gz pg_datanymizer
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: pg_datanymizer-*
          draft: true
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        shell: powershell
        run: |
          cargo build --release --target x86_64-pc-windows-msvc
          Compress-Archive -Path ".\target\x86_64-pc-windows-msvc\release\pg_datanymizer.exe" -DestinationPath ".\pg_datanymizer-win-x64.zip"
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: pg_datanymizer-*
          draft: true
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build and push image
        run: |
          GIT_TAG=$(git describe --tags `git rev-list --tags --max-count=1` | sed "s/v//")
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          docker build -t datanymizer/pg_datanymizer:${GIT_TAG} .
          docker push datanymizer/pg_datanymizer:${GIT_TAG}

          docker build -t datanymizer/pg_datanymizer:latest .
          docker push datanymizer/pg_datanymizer:latest

  # TODO: Fix release process with cargo
  # release-crate:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Build and publish to crates.io
  #       run: |
  #         cargo login ${{ secrets.CRATES_TOKEN }}
  #         cargo publish --manifest-path cli/pg_datanymizer/Cargo.toml
